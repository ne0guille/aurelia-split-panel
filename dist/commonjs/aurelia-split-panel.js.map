{"version":3,"sources":["aurelia-split-panel.js","../src/aurelia-split-panel.ts"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","exports","value","aurelia_framework_1","require","Split","splitDirection","vertical","horizontal","SplitPanelCustomAttribute","element","taskQueue","minSize","gutterSize","prototype","attached","split","detached","splitjs","destroy","_this","queueMicroTask","panelItems","getPanelItems","style","height","clientHeight","setParentHeight","sizes","direction","getElementHeight","offsetHeight","Number","parseInt","parentHeight","String","children","childrenArray","Array","from","forEach","classList","add","map","id","setSize","setSizes","bindable","defaultBindingMode","bindingMode","oneWay","inject","Element","TaskQueue"],"mappings":"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","file":"aurelia-split-panel.js","sourceRoot":"/source/","sourcesContent":["\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar aurelia_framework_1 = require(\"aurelia-framework\");\nvar Split = require(\"split.js\");\nvar splitDirection = { vertical: 'vertical', horizontal: 'horizontal' };\nvar SplitPanelCustomAttribute = (function () {\n    function SplitPanelCustomAttribute(element, taskQueue) {\n        this.element = element;\n        this.taskQueue = taskQueue;\n        this.minSize = 100;\n        this.gutterSize = 10;\n        this.vertical = false;\n    }\n    SplitPanelCustomAttribute.prototype.attached = function () {\n        this.split();\n    };\n    SplitPanelCustomAttribute.prototype.detached = function () {\n        this.splitjs.destroy();\n    };\n    SplitPanelCustomAttribute.prototype.split = function () {\n        var _this = this;\n        this.taskQueue.queueMicroTask(function () {\n            var panelItems = _this.getPanelItems();\n            if (!(_this.vertical && _this.element.style.height && _this.element.clientHeight))\n                _this.setParentHeight();\n            _this.splitjs = Split(panelItems, {\n                sizes: _this.sizes,\n                minSize: _this.minSize,\n                gutterSize: _this.gutterSize,\n                direction: _this.vertical ? splitDirection.vertical : splitDirection.horizontal\n            });\n        });\n    };\n    SplitPanelCustomAttribute.prototype.getElementHeight = function (element) {\n        return element.clientHeight || element.offsetHeight || Number.parseInt(element.style.height) || 0;\n    };\n    SplitPanelCustomAttribute.prototype.setParentHeight = function () {\n        var parentHeight = String(this.getElementHeight(this.element));\n        var height = parentHeight === '0' ? this.getElementHeight(this.element.children[0]) : parentHeight;\n        this.element.style.height = height + \"px\";\n    };\n    SplitPanelCustomAttribute.prototype.getPanelItems = function () {\n        if (!(this.element.children && this.element.children.length))\n            return [];\n        var childrenArray = Array.from(this.element.children);\n        if (!this.vertical)\n            childrenArray.forEach(function (element) { return element.classList.add('split-horizontal'); });\n        return childrenArray.map(function (element) { return \"#\" + element.id; });\n    };\n    SplitPanelCustomAttribute.prototype.setSize = function (sizes) {\n        this.splitjs.setSizes(sizes);\n    };\n    __decorate([\n        aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneWay })\n    ], SplitPanelCustomAttribute.prototype, \"sizes\", void 0);\n    __decorate([\n        aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneWay })\n    ], SplitPanelCustomAttribute.prototype, \"minSize\", void 0);\n    __decorate([\n        aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneWay })\n    ], SplitPanelCustomAttribute.prototype, \"gutterSize\", void 0);\n    __decorate([\n        aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneWay })\n    ], SplitPanelCustomAttribute.prototype, \"vertical\", void 0);\n    SplitPanelCustomAttribute = __decorate([\n        aurelia_framework_1.inject(Element, aurelia_framework_1.TaskQueue)\n    ], SplitPanelCustomAttribute);\n    return SplitPanelCustomAttribute;\n}());\nexports.SplitPanelCustomAttribute = SplitPanelCustomAttribute;\n","import { bindable, bindingMode, inject, TaskQueue } from 'aurelia-framework';\r\n\r\nimport * as Split from 'split.js';\r\n\r\nconst splitDirection = { vertical: 'vertical', horizontal: 'horizontal' };\r\n\r\n@inject(Element, TaskQueue)\r\nexport class SplitPanelCustomAttribute {\r\n  @bindable({ defaultBindingMode: bindingMode.oneWay }) sizes: Array<number>;\r\n  @bindable({ defaultBindingMode: bindingMode.oneWay }) minSize: Array<number> | number = 100;\r\n  @bindable({ defaultBindingMode: bindingMode.oneWay }) gutterSize: number = 10;\r\n  @bindable({ defaultBindingMode: bindingMode.oneWay }) vertical: boolean = false;\r\n\r\n  private splitjs: any;\r\n\r\n  constructor(private element: HTMLElement, private taskQueue: TaskQueue) { }\r\n\r\n  attached() {\r\n    this.split();\r\n  }\r\n\r\n  detached() {\r\n    this.splitjs.destroy();\r\n  }\r\n\r\n  split(): void {\r\n    this.taskQueue.queueMicroTask(() => {\r\n      const panelItems = this.getPanelItems();\r\n      if (!(this.vertical && this.element.style.height && this.element.clientHeight)) this.setParentHeight();\r\n\r\n      this.splitjs = Split(panelItems, {\r\n        sizes: this.sizes,\r\n        minSize: this.minSize,\r\n        gutterSize: this.gutterSize,\r\n        direction: this.vertical ? splitDirection.vertical : splitDirection.horizontal\r\n      });\r\n    });\r\n  }\r\n\r\n  private getElementHeight(element): number {\r\n    return element.clientHeight || element.offsetHeight || Number.parseInt(element.style.height) || 0;\r\n  }\r\n\r\n  private setParentHeight(): void {\r\n    const parentHeight = String(this.getElementHeight(this.element));\r\n    const height = parentHeight === '0' ? this.getElementHeight(this.element.children[0]) : parentHeight;\r\n\r\n    this.element.style.height = `${height}px`;\r\n  }\r\n\r\n  private getPanelItems(): string[] {\r\n    if (!(this.element.children && this.element.children.length)) return [];\r\n\r\n    const childrenArray = Array.from(this.element.children);\r\n\r\n    if (!this.vertical) childrenArray.forEach(element => element.classList.add('split-horizontal'));\r\n\r\n    return childrenArray.map(element => `#${element.id}`);\r\n  }\r\n\r\n  setSize(sizes: Array<number>): void {\r\n    this.splitjs.setSizes(sizes);\r\n  }\r\n}\r\n"]}