{"version":3,"sources":["split-service.js","../src/split-service.ts"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","exports","value","Split","require","aurelia_framework_1","aurelia_event_aggregator_1","split_constants_1","SplitService","ea","prototype","create","options","publish","splitEvents","setSizes","sizes","setSize","destroy","initialize","element","isVertical","direction","splitDirection","vertical","panelItems","getPanelItems","setParentHeight","children","childrenArray","Array","from","splitPanelClass","splitClass","horizontal","forEach","classList","add","map","id","style","height","clientHeight","parentHeight","String","getElementHeight","offsetHeight","Number","parseInt","inject","EventAggregator"],"mappings":"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","file":"split-service.js","sourceRoot":"/source/","sourcesContent":["\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Split = require(\"split.js\");\nvar aurelia_framework_1 = require(\"aurelia-framework\");\nvar aurelia_event_aggregator_1 = require(\"aurelia-event-aggregator\");\nvar split_constants_1 = require(\"./split-constants\");\nvar SplitService = (function () {\n    function SplitService(ea) {\n        this.ea = ea;\n    }\n    SplitService.prototype.create = function (options) {\n        this.ea.publish(split_constants_1.splitEvents.create, options);\n    };\n    SplitService.prototype.setSizes = function (sizes) {\n        this.ea.publish(split_constants_1.splitEvents.setSize, sizes);\n    };\n    SplitService.prototype.destroy = function () {\n        this.ea.publish(split_constants_1.splitEvents.destroy);\n    };\n    SplitService.prototype.initialize = function (element, options) {\n        var isVertical = options.direction === split_constants_1.splitDirection.vertical;\n        var panelItems = this.getPanelItems(element, isVertical);\n        this.setParentHeight(element, isVertical);\n        return Split(panelItems, options);\n    };\n    SplitService.prototype.getPanelItems = function (element, isVertical) {\n        if (!(element.children && element.children.length))\n            return [];\n        var childrenArray = Array.from(element.children);\n        var splitPanelClass = isVertical ? split_constants_1.splitClass.vertical : split_constants_1.splitClass.horizontal;\n        childrenArray.forEach(function (element) { return element.classList.add(splitPanelClass); });\n        return childrenArray.map(function (element) { return \"#\" + element.id; });\n    };\n    SplitService.prototype.setParentHeight = function (element, isVertical) {\n        if (!(isVertical && element.style.height && element.clientHeight)) {\n            var parentHeight = String(this.getElementHeight(element));\n            var height = parentHeight === '0' ? this.getElementHeight(element.children[0]) : parentHeight;\n            element.style.height = height + \"px\";\n        }\n    };\n    SplitService.prototype.getElementHeight = function (element) {\n        return element.clientHeight || element.offsetHeight || Number.parseInt(element.style.height) || 0;\n    };\n    SplitService = __decorate([\n        aurelia_framework_1.inject(aurelia_event_aggregator_1.EventAggregator)\n    ], SplitService);\n    return SplitService;\n}());\nexports.SplitService = SplitService;\n","import * as Split from 'split.js';\n\nimport { inject } from 'aurelia-framework';\nimport { EventAggregator } from 'aurelia-event-aggregator';\n\nimport { splitClass, splitEvents, splitDirection } from './split-constants';\n\nexport interface SplitOptions {\n  sizes: Array<number>;\n  minSize: Array<number> | number;\n  gutterSize: number;\n  direction: string;\n  cursor: string;\n}\n\n@inject(EventAggregator)\nexport class SplitService {\n  ea: EventAggregator;\n\n  constructor(ea) {\n    this.ea = ea;\n  }\n\n  public create(options: SplitOptions) {\n    this.ea.publish(splitEvents.create, options);\n  }\n\n  public setSizes(sizes) {\n    this.ea.publish(splitEvents.setSize, sizes);\n  }\n\n  public destroy() {\n    this.ea.publish(splitEvents.destroy);\n  }\n\n  public initialize(element: HTMLElement, options: SplitOptions) {\n    const isVertical = options.direction === splitDirection.vertical;\n    const panelItems = this.getPanelItems(element, isVertical);\n    this.setParentHeight(element, isVertical);\n\n    return Split(panelItems, options);\n  }\n\n  private getPanelItems(element: HTMLElement, isVertical: boolean): string[] {\n    if (!(element.children && element.children.length)) return [];\n\n    const childrenArray = Array.from(element.children);\n    const splitPanelClass = isVertical ? splitClass.vertical : splitClass.horizontal;\n    \n    childrenArray.forEach(element => element.classList.add(splitPanelClass));\n\n    return childrenArray.map(element => `#${element.id}`);\n  }\n\n  private setParentHeight(element: HTMLElement, isVertical: boolean): void {\n    if (!(isVertical && element.style.height && element.clientHeight)) {\n      const parentHeight = String(this.getElementHeight(element));\n      const height = parentHeight === '0' ? this.getElementHeight(element.children[0]) : parentHeight;\n\n      element.style.height = `${height}px`;\n    }\n  }\n\n  private getElementHeight(element): number {\n    return element.clientHeight || element.offsetHeight || Number.parseInt(element.style.height) || 0;\n  }\n}"]}