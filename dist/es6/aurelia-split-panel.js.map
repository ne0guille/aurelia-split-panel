{"version":3,"sources":["../src/aurelia-split-panel.ts"],"names":[],"mappings":"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","file":"aurelia-split-panel.js","sourcesContent":["import { EventAggregator, Subscription } from 'aurelia-event-aggregator';\r\nimport { bindable, bindingMode, inject, TaskQueue } from 'aurelia-framework';\r\n\r\nimport { SplitOptions, SplitService } from './split-service';\r\nimport { splitDirection, splitEvents } from \"./split-constants\";\r\n\r\n@inject(Element, TaskQueue, EventAggregator, SplitService)\r\nexport class SplitPanelCustomAttribute {\r\n  @bindable({ defaultBindingMode: bindingMode.oneWay, primaryProperty: true }) sizes: Array<number>;\r\n  @bindable({ defaultBindingMode: bindingMode.oneWay }) minSize: Array<number> | number = 100;\r\n  @bindable({ defaultBindingMode: bindingMode.oneWay }) gutterSize: number = 10;\r\n  @bindable({ defaultBindingMode: bindingMode.oneWay }) vertical: boolean = false;\r\n  @bindable({ defaultBindingMode: bindingMode.oneWay }) cursor: string = 'grabbing';\r\n  @bindable({ defaultBindingMode: bindingMode.oneWay }) initialize: boolean = true;\r\n\r\n  private splitjs: any;\r\n  private options: SplitOptions;\r\n  private subscriptions: Subscription[] = [];\r\n\r\n  constructor(private element: HTMLElement,\r\n    private taskQueue: TaskQueue,\r\n    private ea: EventAggregator,\r\n    private splitService: SplitService) { }\r\n\r\n  attached() {\r\n    this.options = {\r\n      sizes: this.sizes,\r\n      minSize: this.minSize,\r\n      gutterSize: this.gutterSize,\r\n      direction: this.vertical ? splitDirection.vertical : splitDirection.horizontal,\r\n      cursor: this.cursor\r\n    };\r\n\r\n    if (this.initialize) this.taskQueue.queueMicroTask(() => this.initializeSplit());\r\n\r\n    this.subscriptions.push(\r\n      this.ea.subscribe(splitEvents.create, (options?: SplitOptions) => this.initializeSplit(options)),\r\n      this.ea.subscribe(splitEvents.destroy, () => this.destroySplit()),\r\n      this.ea.subscribe(splitEvents.setSize, (sizes: number[]) => this.setSizes(sizes))\r\n    );\r\n  }\r\n\r\n  detached() {\r\n    this.destroySplit();\r\n    this.subscriptions.forEach((subs: Subscription) => subs.dispose());\r\n  }\r\n\r\n  private initializeSplit(options?: SplitOptions) {\r\n    this.destroySplit();\r\n\r\n    const splitOptions = options || this.options;\r\n\r\n    this.splitjs = this.splitService.initialize(this.element, splitOptions);\r\n  }\r\n\r\n  private destroySplit() {\r\n    if (this.splitjs !== undefined) this.splitjs = this.splitjs.destroy();\r\n  }\r\n\r\n  private setSizes(sizes: number[]){\r\n    if (this.splitjs !== undefined) this.splitjs = this.splitjs.setSizes(sizes);\r\n  }\r\n}\r\n"],"sourceRoot":"/source/"}